#!/bin/bash

# Dokku Upload Limits Configuration Script
# Configures nginx upload limits for existing Dokku installations
# Usage: ./dokku-configure-upload-limits.sh [app-name] [size-limit]

set -e

# Color definitions
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Default upload limit
DEFAULT_LIMIT="20m"

echo -e "${GREEN}Dokku Upload Limits Configuration Script${NC}"
echo -e "${BLUE}=======================================${NC}"

# Check if running as root
if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}This script must be run as root (use sudo)${NC}"
   exit 1
fi

# Check if Dokku is installed
if ! command -v dokku &> /dev/null; then
    echo -e "${RED}Error: Dokku is not installed or not in PATH${NC}"
    exit 1
fi

echo -e "${GREEN}✓ Dokku installation detected${NC}"

# Function to configure global upload limits
configure_global_limits() {
    local limit="${1:-$DEFAULT_LIMIT}"
    
    echo -e "${BLUE}Configuring global nginx upload limits...${NC}"
    
    # Create global nginx configuration
    GLOBAL_NGINX_CONF="/etc/nginx/conf.d/99-dokku-upload-limits.conf"
    
    cat > "$GLOBAL_NGINX_CONF" << EOF
# Global default upload limits for Dokku applications
# Generated by dokku-configure-upload-limits.sh on $(date)

# Default client max body size
client_max_body_size $limit;

# Additional timeout settings for large file uploads
client_body_timeout 300s;
client_header_timeout 300s;
proxy_connect_timeout 300s;
proxy_send_timeout 300s;
proxy_read_timeout 300s;

# Optional: Increase proxy buffer sizes for large uploads
proxy_buffer_size 8k;
proxy_buffers 8 8k;
proxy_busy_buffers_size 16k;
EOF

    echo -e "${GREEN}✓ Global configuration created: $GLOBAL_NGINX_CONF${NC}"
    echo -e "${CYAN}  Default upload limit set to: $limit${NC}"
}

# Function to configure app-specific upload limits
configure_app_limits() {
    local app_name="$1"
    local limit="$2"
    
    echo -e "${BLUE}Configuring upload limits for app: $app_name (limit: $limit)${NC}"
    
    # Check if app exists
    if ! dokku apps:exists "$app_name" 2>/dev/null; then
        echo -e "${RED}Error: App '$app_name' does not exist${NC}"
        echo -e "${YELLOW}Available apps:${NC}"
        dokku apps:list 2>/dev/null || echo "No apps found"
        return 1
    fi
    
    # Method 1: Try modern Dokku nginx:set command (preferred)
    if dokku nginx:set "$app_name" client-max-body-size "$limit" 2>/dev/null; then
        echo -e "${GREEN}✓ Set client-max-body-size using dokku nginx:set command${NC}"
        
        # Rebuild the nginx config to apply changes
        if dokku proxy:build-config "$app_name" 2>/dev/null; then
            echo -e "${GREEN}✓ Rebuilt nginx configuration${NC}"
        else
            echo -e "${YELLOW}⚠ Warning: Could not rebuild nginx config automatically${NC}"
        fi
    else
        echo -e "${YELLOW}⚠ Modern dokku nginx:set command not available, using manual configuration...${NC}"
        
        # Method 2: Manual nginx configuration (fallback)
        APP_NGINX_DIR="/home/dokku/$app_name/nginx.conf.d"
        
        # Create nginx.conf.d directory if it doesn't exist
        if [ ! -d "$APP_NGINX_DIR" ]; then
            mkdir -p "$APP_NGINX_DIR"
            echo -e "${GREEN}✓ Created directory: $APP_NGINX_DIR${NC}"
        fi
        
        # Create upload configuration file
        UPLOAD_CONF="$APP_NGINX_DIR/upload.conf"
        cat > "$UPLOAD_CONF" << EOF
# Upload limits configuration for $app_name
# Generated by dokku-configure-upload-limits.sh on $(date)
client_max_body_size $limit;

# Additional timeout settings for large uploads
client_body_timeout 300s;
client_header_timeout 300s;
EOF
        
        # Set proper ownership and permissions
        chown dokku:dokku "$UPLOAD_CONF"
        chmod 644 "$UPLOAD_CONF"
        
        echo -e "${GREEN}✓ Created upload configuration: $UPLOAD_CONF${NC}"
        echo -e "${GREEN}✓ Set proper ownership and permissions${NC}"
    fi
}

# Function to reload nginx
reload_nginx() {
    echo -e "${BLUE}Reloading nginx to apply changes...${NC}"
    
    # Test nginx configuration first
    if nginx -t 2>/dev/null; then
        echo -e "${GREEN}✓ Nginx configuration test passed${NC}"
    else
        echo -e "${RED}✗ Nginx configuration test failed${NC}"
        echo -e "${YELLOW}Please check your nginx configuration manually${NC}"
        return 1
    fi
    
    # Reload nginx
    if systemctl reload nginx 2>/dev/null; then
        echo -e "${GREEN}✓ Nginx reloaded successfully${NC}"
    elif service nginx reload 2>/dev/null; then
        echo -e "${GREEN}✓ Nginx reloaded successfully (using service command)${NC}"
    else
        echo -e "${YELLOW}⚠ Warning: Could not reload nginx automatically${NC}"
        echo -e "${YELLOW}Please run 'systemctl reload nginx' or 'service nginx reload' manually${NC}"
        return 1
    fi
}

# Function to show current configuration
show_current_config() {
    local app_name="$1"
    
    if [ -n "$app_name" ]; then
        echo -e "${BLUE}Current nginx configuration for $app_name:${NC}"
        if dokku nginx:show-config "$app_name" 2>/dev/null | grep -i "client_max_body_size" || echo "No specific upload limit found"; then
            true
        fi
    else
        echo -e "${BLUE}Global nginx upload configuration:${NC}"
        if [ -f "/etc/nginx/conf.d/99-dokku-upload-limits.conf" ]; then
            cat /etc/nginx/conf.d/99-dokku-upload-limits.conf
        else
            echo "No global upload limits configuration found"
        fi
    fi
}

# Function to list all apps
list_apps() {
    echo -e "${BLUE}Available Dokku applications:${NC}"
    if dokku apps:list 2>/dev/null; then
        true
    else
        echo "No apps found or unable to list apps"
    fi
}

# Function to show usage
show_usage() {
    echo -e "${CYAN}Usage:${NC}"
    echo -e "  ${0} [options] [app-name] [size-limit]"
    echo ""
    echo -e "${CYAN}Options:${NC}"
    echo -e "  -g, --global [limit]     Set global upload limits (default: $DEFAULT_LIMIT)"
    echo -e "  -a, --app <name> [limit] Set upload limits for specific app"
    echo -e "  -s, --show [app-name]    Show current configuration"
    echo -e "  -l, --list               List all applications"
    echo -e "  -h, --help               Show this help message"
    echo ""
    echo -e "${CYAN}Examples:${NC}"
    echo -e "  ${0} --global 50m                    # Set global limit to 50MB"
    echo -e "  ${0} --app myapp 100m               # Set 100MB limit for 'myapp'"
    echo -e "  ${0} myapp 100m                     # Same as above (shorthand)"
    echo -e "  ${0} --show myapp                   # Show config for 'myapp'"
    echo -e "  ${0} --list                         # List all apps"
    echo ""
    echo -e "${CYAN}Size format: Use 'k', 'm', or 'g' suffix (e.g., 1024k, 50m, 1g)${NC}"
}

# Parse command line arguments
case "${1:-}" in
    -h|--help)
        show_usage
        exit 0
        ;;
    -l|--list)
        list_apps
        exit 0
        ;;
    -s|--show)
        show_current_config "$2"
        exit 0
        ;;
    -g|--global)
        LIMIT="${2:-$DEFAULT_LIMIT}"
        configure_global_limits "$LIMIT"
        reload_nginx
        echo -e "${GREEN}✅ Global upload limits configured successfully!${NC}"
        exit 0
        ;;
    -a|--app)
        if [ -z "$2" ]; then
            echo -e "${RED}Error: App name required${NC}"
            show_usage
            exit 1
        fi
        APP_NAME="$2"
        LIMIT="${3:-$DEFAULT_LIMIT}"
        configure_app_limits "$APP_NAME" "$LIMIT"
        reload_nginx
        echo -e "${GREEN}✅ Upload limits configured for $APP_NAME!${NC}"
        echo -e "${CYAN}To verify: dokku nginx:show-config $APP_NAME | grep client_max_body_size${NC}"
        exit 0
        ;;
    "")
        # No arguments - show interactive menu
        echo -e "${YELLOW}No arguments provided. What would you like to do?${NC}"
        echo ""
        echo "1) Configure global upload limits"
        echo "2) Configure app-specific upload limits"
        echo "3) Show current configuration"
        echo "4) List all applications"
        echo "5) Show help"
        echo ""
        read -p "Enter your choice (1-5): " choice
        
        case $choice in
            1)
                read -p "Enter global upload limit (default: $DEFAULT_LIMIT): " limit
                limit="${limit:-$DEFAULT_LIMIT}"
                configure_global_limits "$limit"
                reload_nginx
                echo -e "${GREEN}✅ Global upload limits configured!${NC}"
                ;;
            2)
                list_apps
                echo ""
                read -p "Enter app name: " app_name
                read -p "Enter upload limit (default: $DEFAULT_LIMIT): " limit
                limit="${limit:-$DEFAULT_LIMIT}"
                configure_app_limits "$app_name" "$limit"
                reload_nginx
                echo -e "${GREEN}✅ Upload limits configured for $app_name!${NC}"
                ;;
            3)
                read -p "Enter app name (or press Enter for global config): " app_name
                show_current_config "$app_name"
                ;;
            4)
                list_apps
                ;;
            5)
                show_usage
                ;;
            *)
                echo -e "${RED}Invalid choice${NC}"
                exit 1
                ;;
        esac
        ;;
    *)
        # Assume first argument is app name, second is limit
        APP_NAME="$1"
        LIMIT="${2:-$DEFAULT_LIMIT}"
        configure_app_limits "$APP_NAME" "$LIMIT"
        reload_nginx
        echo -e "${GREEN}✅ Upload limits configured for $APP_NAME!${NC}"
        echo -e "${CYAN}To verify: dokku nginx:show-config $APP_NAME | grep client_max_body_size${NC}"
        ;;
esac 